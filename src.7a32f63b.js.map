{"version":3,"sources":["index.js"],"names":["$","each","index","elem","innerHTML","innerText","replace","applyColor","listA","listB","map","sublist","push","githubColors","materialColors","allRed","allBlue","allGreen","lightBlue","allTeal","languageProficiencies","datatable","unshift","role","drawProgrammingLanguagesChart","data","google","visualization","arrayToDataTable","PatternFormat","BarChart","document","getElementById","draw","width","height","chart","title","bars","bar","groupWidth","backgroundColor","fill","legend","chartArea","left","hAxis","gridlines","color","textPosition","vAxis","textStyle","fontSize","charts","load","packages","setOnLoadCallback"],"mappings":";AAKAA,EAAE,UAAUC,KAAK,SAAUC,EAAOC,GAChCA,EAAKC,UAAYD,EAAKE,UAAUC,QAAQ,KAAM,8CAC9CH,EAAKC,WAAa,sCAGpB,IAAIG,EAAa,SAAUC,EAAOC,GACzBD,OAAAA,EAAME,IAAI,SAAUC,EAAST,GAE3BS,OADPA,EAAQC,KAAK,UAAYH,EAAMP,GAAS,mBAAqBO,EAAMP,GAAS,qBACrES,KAKPE,EAAe,CAAC,UAAW,UAAW,UAAW,UACjC,UAAU,UAAW,UAAW,WAChDC,EAAiB,CAAC,UAAW,UAAW,UAAW,UAChC,UAAW,UAAW,UAAW,WACpDC,EAAS,CAAC,UAAW,UAAW,UAAW,UACjC,UAAW,UAAW,UAAW,WAC3CC,EAAU,CAAC,UAAW,UAAW,UAAW,UACjC,UAAW,UAAW,UAAW,WAC5CC,EAAW,CAAC,UAAW,UAAW,UAAW,UACjC,UAAW,UAAW,UAAW,WAC7CC,EAAY,CAAC,UAAW,UAAW,UAAW,UACjC,UAAW,UAAW,UAAW,WAC9CC,EAAU,CAAC,UAAW,UAAW,UAAW,UACjC,UAAW,UAAW,UAAW,WAG5CC,EAAwB,CAC1B,CAAC,aAAe,IAChB,CAAC,OAAe,IAChB,CAAC,OAAe,IAChB,CAAC,QAAe,IAChB,CAAC,IAAe,IAChB,CAAC,SAAe,IAChB,CAAC,SAAe,IAChB,CAAC,MAAe,KAIdC,EAAYd,EAAWa,EAAuBL,GAClDM,EAAUC,QAAQ,CAAC,uBAAwB,cAAe,CAACC,KAAM,WAEjE,IAAIC,EAAgC,WAc9BC,IAAAA,EAAOC,OAAOC,cAAcC,iBAAiBP,GAmBjC,IAAIK,OAAOC,cAAcE,cAAc,mBAE3C,IAAIH,OAAOC,cAAcG,SACnCC,SAASC,eAAe,+BAEpBC,KAAKR,EAtBG,CACZS,MAAO,IACPC,OAAQ,IACRC,MAAO,CACLC,MAAO,yBAETC,KAAM,aACNC,IAAK,CACHC,WAAY,IAEdC,gBAAiB,CAACC,KAAM,eACxBC,OAAQ,OACRC,UAAW,CAACC,KAAM,KAClBC,MAAO,CAAEC,UAAW,CAAEC,MAAO,eAAiBC,aAAc,QAC5DC,MAAO,CAAEC,UAAW,CAAEC,SAAU,QAWpC1B,OAAO2B,OAAOC,KAAK,UAAW,CAAEC,SAAU,CAAC,YAAa,SACxD7B,OAAO2B,OAAOG,kBAAkBhC","file":"src.7a32f63b.js","sourceRoot":"../src","sourcesContent":["/*global $, google*/\n\n\n\n// Turn spaces into dots on h1\n$('h1, h2').each(function (index, elem) {\n  elem.innerHTML = elem.innerText.replace(/ /g, '<span class=\"char-dot\">&nbsp;&nbsp;</span>');\n  elem.innerHTML += '<span class=\"char-return\"></span>';\n});\n\nvar applyColor = function (listA, listB) {\n  return listA.map(function (sublist, index) {\n    sublist.push('color: ' + listB[index] + '; stroke-color: ' + listB[index] + '; stroke-width: 1');\n    return sublist;\n  });\n};\n\n\nvar githubColors = ['#f1e05a', '#b07219', '#563d7c', '#e44b23',\n                    '#9e9e9e','#3272a5', '#1e4aec', '#f34b7d'];\nvar materialColors = ['#ffeb3b', '#795548', '#03a9f4', '#f44336',\n                       '#9e9e9e', '#ffeb3b', '#673ab7', '#2196f3'];\nvar allRed = ['#f44336', '#f44336', '#f44336', '#f44336',\n              '#f44336', '#f44336', '#f44336', '#f44336'];\nvar allBlue = ['#82b1ff', '#82b1ff', '#82b1ff', '#82b1ff',\n               '#82b1ff', '#82b1ff', '#82b1ff', '#82b1ff'];\nvar allGreen = ['#69f0ae', '#69f0ae', '#69f0ae', '#69f0ae',\n                '#69f0ae', '#69f0ae', '#69f0ae', '#69f0ae'];\nvar lightBlue = ['#80d8ff', '#80d8ff', '#80d8ff', '#80d8ff',\n                 '#80d8ff', '#80d8ff', '#80d8ff', '#80d8ff'];\nvar allTeal = ['#1de9b6', '#1de9b6', '#1de9b6', '#1de9b6',\n               '#1de9b6', '#1de9b6', '#1de9b6', '#1de9b6'];\n\n\nvar languageProficiencies = [\n  ['JavaScript',  90],\n  ['Java',        80],\n  ['CSS3',        80],\n  ['HTML5',       70],\n  ['C',           70],\n  ['Python',      60],\n  ['Scheme',      30],\n  ['C++',         20]\n];\n\n\nvar datatable = applyColor(languageProficiencies, allRed);\ndatatable.unshift(['Programming Language', 'Proficiency', {role: 'style'}]);\n\nvar drawProgrammingLanguagesChart = function () {\n  /*\n  var data = google.visualization.arrayToDataTable([\n    ['Programming Language', 'Proficiency', {role: 'style'}],\n    ['JavaScript',  90, 'color: #ffeb3b'],//#f1e05a'],\n    ['Java',        80, 'color: #795548'],//#b07219'],\n    ['CSS3',        80, 'color: #03a9f4'],//#563d7c'],\n    ['HTML5',       70, 'color: #f44336'],//#e44b23'],\n    ['C',           70, 'color: #9e9e9e'],//#9e9e9e'],\n    ['Python',      60, 'color: #ffeb3b'],//#3272a5'],\n    ['Scheme',      30, 'color: #673ab7'],//#1e4aec'],\n    ['C++',         20, 'color: #2196f3']//#f34b7d']\n  ]);\n  */\n  var data = google.visualization.arrayToDataTable(datatable);\n\n  var options = {\n    width: 400,\n    height: 246,\n    chart: {\n      title: 'Programming Languages'\n    },\n    bars: 'horizontal',\n    bar: {\n      groupWidth: 15\n    },\n    backgroundColor: {fill: 'transparent'},\n    legend: 'none',\n    chartArea: {left: 100},\n    hAxis: { gridlines: { color: 'transparent' }, textPosition: 'none' },\n    vAxis: { textStyle: { fontSize: 14 } }\n  };\n\n  var formatter = new google.visualization.PatternFormat('<p>hello{1}</p>');\n\n  var chart = new google.visualization.BarChart(\n    document.getElementById('programming-language-chart')\n  );\n  chart.draw(data, options);\n};\n\ngoogle.charts.load('current', { packages: ['corechart', 'bar'] });\ngoogle.charts.setOnLoadCallback(drawProgrammingLanguagesChart);\n\n\n"]}